generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  DELIVERED
  CANCELED
}

model Company {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String
  password  String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  Products Products[]
  Order    Order[]

  @@map("companies")
}

model Products {
  id        String    @id @default(cuid())
  name      String
  price     Float
  color     String?
  companyId String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  company   Company     @relation(fields: [companyId], references: [id])
  OrderItem OrderItem[]

  @@index([companyId])
  @@map("products")
}

model Order {
  id        String      @id @default(cuid())
  code      String      @unique
  status    OrderStatus
  value     Float
  companyId String
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")
  deletedAt DateTime?   @map("deleted_at")

  company   Company     @relation(fields: [companyId], references: [id])
  OrderItem OrderItem[]

  @@index([companyId])
  @@map("orders")
}

model OrderItem {
  id          String    @id @default(cuid())
  productName String    @map("product_name")
  color       String?
  quantity    Int
  price       Float
  productId   String
  orderId     String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")

  product Products @relation(fields: [productId], references: [id])
  order   Order    @relation(fields: [orderId], references: [id])

  @@index([productId])
  @@index([orderId])
  @@map("order_items")
}
